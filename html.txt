<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Autism Prediction</title>
    <style>
        body {
            font-family: sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* Subtle fade-in animation for the body */
            animation: fadeIn 0.5s ease-in-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        h2 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
            /* Subtle slide-down animation for the heading */
            animation: slideDown 0.5s ease-in-out;
        }

        @keyframes slideDown {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        #autismForm {
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            width: 400px;
            max-width: 90%;
            /* Subtle scale-up animation for the form */
            animation: scaleUp 0.5s ease-in-out;
        }

        @keyframes scaleUp {
            from { transform: scale(0.95); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
        }

        .question {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: bold;
        }

        input[type="number"],
        select {
            width: calc(100% - 12px);
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
            margin-bottom: 10px;
            /* Subtle fade-in for input elements on focus */
            transition: border-color 0.3s ease;
        }

        input[type="number"]:focus,
        select:focus {
            border-color: #007bff;
        }

        button[type="submit"] {
            background-color: #007bff;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s ease, transform 0.2s ease-in-out;
            width: 100%;
            box-sizing: border-box;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
            /* Subtle scale-up on hover for the button */
            transform: scale(1.02);
        }

        #result {
            text-align: center;
            margin-top: 30px;
            font-weight: bold;
            color: #28a745;
            font-size: 18px;
            /* Subtle fade-in for the result */
            animation: fadeIn 0.5s ease-in-out;
        }

        .error {
            color: #dc3545;
            margin-top: 10px;
            text-align: center;
            font-weight: normal;
            /* Subtle fade-in for errors */
            animation: fadeIn 0.5s ease-in-out;
        }
    </style>
</head>
<body>
    <h2>Autism Prediction Form</h2>
    <div class="question">
        <label for="dataset">Select Dataset:</label>
        <select id="dataset" onchange="updateModelInfo()">
            <option value="primary">Primary Features Dataset</option>
            <option value="secondary">Secondary Features Dataset</option>
        </select>
    </div>
    <form id="autismForm">
        <div class="question">
            <label for="age">Age (1-20years):</label>
            <input type="number" id="age" required min="1" max="48">
        </div>

        <div class="question">
            <label for="gender">Sex:</label>
            <select id="gender">
                <option value="male">Male</option>
                <option value="female">Female</option>
            </select>
        </div>

        <div class="question">
            <label for="ethnicity">Ethnicity:</label>
            <select id="ethnicity">
                <option value="others">Others</option>
                <option value="white european">White-European</option>
                <option value="asian">Asian</option>
                <option value="black">Black</option>
                <option value="middle eastern">Middle Eastern</option>
                <option value="hispanic">Hispanic</option>
                <option value="south asian">South Asian</option>
                <option value="native indian">Native Indian</option>
                <option value="pacifica">Pacifica</option>
                <option value="mixed">Mixed</option>
            </select>
        </div>

        <div class="question">
            <label for="jaundice">Was the child born with jaundice?</label>
            <select id="jaundice">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </select>
        </div>

        <div class="question">
            <label for="austim">Does any immediate family member have/had a PDD(Pervasive Developmental Disorders)?</label>
            <select id="austim">
                <option value="no">No</option>
                <option value="yes">Yes</option>
            </select>
        </div>

        <div class="question">
            <label for="a1">Q1: Does your child look at you when you call his/her name?</label>
            <select id="a1">
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div class="question">
            <label for="a4">Q4: Does your child ever point with one finger to ask for something?</label>
            <select id="a4">
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div class="question">
            <label for="a10">Q10: Does your child ever show you things that he/she has made?</label>
            <select id="a10">
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <button type="submit">Predict</button>
    </form>

    <div class="model-info" style="text-align: center; margin-top: 20px;">
        <p id="model-name"></p>
        <p id="model-accuracy"></p>
    </div>
    <p id="result" style="text-align: center; margin-top: 30px;"></p>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
let yesPercentageChartInstance = null;
let accuracyChartInstance = null;

function updateModelInfo() {
    const dataset = document.getElementById('dataset').value;
    fetch(`/model-info?dataset=${dataset}`)
        .then(response => response.json())
        .then(data => {
            document.getElementById('model-name').textContent = `Model: ${data.model_name}`;
            document.getElementById('model-accuracy').textContent = `Accuracy: ${data.model_accuracy}`;
            
            // Update the accuracy chart with model accuracy
            const accuracy = parseFloat(data.model_accuracy);
            const inaccuracy = 100 - accuracy;
            
            if (accuracyChartInstance) {
                accuracyChartInstance.data.datasets[0].data = [accuracy, inaccuracy];
                accuracyChartInstance.update();
            }
        })
        .catch(error => console.error('Error:', error));
}

updateModelInfo(); // Initialize with the first dataset

document.querySelector("form").addEventListener("submit", function (e) {
    e.preventDefault();
    const dataset = document.getElementById('dataset').value;
    const formData = {
        age: document.getElementById('age').value,
        gender: document.getElementById('gender').value,
        ethnicity: document.getElementById('ethnicity').value,
        jaundice: document.getElementById('jaundice').value,
        austim: document.getElementById('austim').value,
        a1: document.getElementById('a1').value,
        a4: document.getElementById('a4').value,
        a10: document.getElementById('a10').value,
        dataset: dataset
    };

    fetch('/predict', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData)
    })
    e.preventDefault();

    const data = {
        age: document.getElementById("age").value,
        gender: document.getElementById("gender").value,
        ethnicity: document.getElementById("ethnicity").value,
        jaundice: document.getElementById("jaundice").value,
        austim: document.getElementById("austim").value,
        a1: parseInt(document.getElementById("a1").value),
        a4: parseInt(document.getElementById("a4").value),
        a10: parseInt(document.getElementById("a10").value)
    };

    fetch("/predict", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        const resultElement = document.getElementById("result");
        if (data.result) {
            resultElement.innerText = data.result;
            resultElement.className = "";
        } else if (data.error) {
            resultElement.innerText = data.error;
            resultElement.className = "error";
        } else {
            resultElement.innerText = "Prediction failed.";
            resultElement.className = "error";
        }

        const formElement = document.querySelector("form");
        const parentElement = formElement.parentNode;

        // Ensure the parent has a position style to correctly position the charts
        parentElement.style.position = 'relative';

        // Update or create the 'yes' percentage pie chart
        if (data.yes_percentage !== undefined) {
            const yesPercentage = data.yes_percentage;
            const noPercentage = 100 - yesPercentage;
            let chartContainer1 = document.getElementById('yesPercentageChart');

            if (yesPercentageChartInstance) {
                yesPercentageChartInstance.data.datasets[0].data = [yesPercentage, noPercentage];
                yesPercentageChartInstance.update();
            } else {
                chartContainer1 = document.createElement('canvas');
                chartContainer1.id = 'yesPercentageChart';
                chartContainer1.style.width = '300px';
                chartContainer1.style.height = '300px';
                chartContainer1.style.position = 'absolute';
                chartContainer1.style.top = '520px'; // Adjust as needed
                chartContainer1.style.right = '190px'; // Adjusted to be closer
                parentElement.appendChild(chartContainer1);

                yesPercentageChartInstance = new Chart(chartContainer1, {
                    type: 'pie',
                    data: {
                        labels: ['Likely Indicators', 'Other Factors'],
                        datasets: [{
                            data: [yesPercentage, noPercentage],
                            backgroundColor: ['#2ecc71', '#e74c3c'],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: false,
                        maintainAspectRatio: false,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Indicators from Specific Questions',
                                font: {
                                    size: 14
                                }
                            },
                            legend: {
                                position: 'bottom',
                                labels: {
                                    font: {
                                        size: 12
                                    }
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return `${context.label}: ${context.formattedValue}%`;
                                    }
                                }
                            }
                        }
                    }
                });
            }
        } else if (yesPercentageChartInstance) {
            yesPercentageChartInstance.destroy();
            yesPercentageChartInstance = null;
        }

        // Render the model accuracy pie chart
        const accuracy = 83.41232227488151;
        const inaccuracy = 100 - accuracy;
        let chartContainer2 = document.getElementById('accuracyChart');

        if (accuracyChartInstance) {
            accuracyChartInstance.data.datasets[0].data = [accuracy, inaccuracy];
            accuracyChartInstance.update();
        } else {
            chartContainer2 = document.createElement('canvas');
            chartContainer2.id = 'accuracyChart';
            chartContainer2.style.width = '200px';
            chartContainer2.style.height = '200px';
            chartContainer2.style.position = 'absolute';
            chartContainer2.style.top = '720px'; // Adjust based on the height of the first chart and spacing
            chartContainer2.style.left = '500px'; // Adjusted to align with the first chart
            parentElement.appendChild(chartContainer2);

            accuracyChartInstance = new Chart(chartContainer2, {
                type: 'pie',
                data: {
                    labels: ['Accuracy', 'Inaccuracy'],
                    datasets: [{
                        data: [accuracy, inaccuracy],
                        backgroundColor: ['#3498db', '#f39c12'],
                        hoverOffset: 4
                    }]
                },
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Model Accuracy',
                            font: {
                                size: 14
                            }
                        },
                        legend: {
                            position: 'bottom',
                            labels: {
                                font: {
                                    size: 12
                                }
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `${context.label}: ${context.formattedValue}%`;
                                }
                            }
                        }
                    }
                }
            });
        }
    })
    .catch(error => {
        console.error("Error:", error);
        document.getElementById("result").innerText = "Prediction failed.";
        document.getElementById("result").className = "error";
    });
});

// Initialize the accuracy chart when the page loads
document.addEventListener('DOMContentLoaded', function() {
    const formElement = document.querySelector("form");
    const parentElement = formElement.parentNode;
    parentElement.style.position = 'relative';

    const accuracy = 83.41232227488151;
    const inaccuracy = 100 - accuracy;
    const chartContainer2 = document.createElement('canvas');
    chartContainer2.id = 'accuracyChart';
    chartContainer2.style.width = '300px';
    chartContainer2.style.height = '300px';
    chartContainer2.style.position = 'absolute';
    chartContainer2.style.top = '120px'; // Adjust as needed
    chartContainer2.style.right = '200px'
    parentElement.appendChild(chartContainer2);

    accuracyChartInstance = new Chart(chartContainer2, {
        type: 'pie',
        data: {
            labels: ['Accuracy', 'Inaccuracy'],
            datasets: [{
                data: [accuracy, inaccuracy],
                backgroundColor: ['#3498db', '#f39c12'],
                hoverOffset: 4
            }]
        },
        options: {
            responsive: false,
            maintainAspectRatio: false,
            plugins: {
                title: {
                    display: true,
                    text: 'Model Accuracy',
                    font: {
                        size: 14
                    }
                },
                legend: {
                    position: 'bottom',
                    labels: {
                        font: {
                            size: 12
                        }
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return `${context.label}: ${context.formattedValue}%`;
                        }
                    }
                }
            }
        }
    });
});
</script>
</body>
</html>